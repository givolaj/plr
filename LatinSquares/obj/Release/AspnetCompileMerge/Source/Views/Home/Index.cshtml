@{
    ViewBag.Title = "PLR";
}
<div class="jumbotron">
    <h1>Partial Latin Rectangles</h1>
    <p>From sudoku to cryptography, we help you generate your data</p>
</div>

<div class="row text-div">
    <p>
        <img alt="Euler (1707 - 1783)" src="https://media.giphy.com/media/8qUjDf9PZlHZ6/giphy.gif" class="inline" style="border-radius: 20px; height: 200px; width: auto; float: left; margin: 0px 20px 0px 0px;" />
        <b>What is a Latin Rectangle?</b><br/>
        A <b>Latin rectangle</b> is an r × n matrix, with n symbols, usually digits and letters, such that no symbol occurres more than once in any row or column.<br />
        A <b>partial Latin rectangle (PLR)</b> is a Latin rectangle where some of the entries are empty <small>(marked as a dot in this website)</small>.<br />
        The name "Latin square" was inspired by mathematical papers by <a href="https://en.wikipedia.org/wiki/Leonhard_Euler" target="_blank">Leonhard Euler</a> (1707–1783), who used Latin characters as symbols.
    </p>
</div>

<div class="row text-div">
    <p>
        <img alt="Einstein" src="https://68.media.tumblr.com/23eeea1415bc929a2e849fcc4dd2168b/tumblr_nw87oeE6N41uhfpc5o1_500.gif" class="inline" style="border-radius: 20px; height: 200px; width: auto; float: right; margin: 0px 0px 0px 20px;" />
        <b>Why do we care about PLRs?</b>
        <br />1.	In statistics, Latin rectangles have applications in the design of experiments.
        <br />2.	PLRs have applications in games and puzzles (e.g. sudoku)
        <br />3.	PLRs are used in cyber security and Cryptography
        <br />4.	Latin rectangles are related to interesting questions
        in combinatorial mathematics.
    </p>
</div>

<div class="row text-div">
    <p>
        <img alt="Einstein" src="https://memeguy.com/photos/thumbs/line-square-cube-hypercube-82868.gif" class="inline" style="border-radius: 20px; height: 200px; width: auto; float: left; margin: 0px 20px 0px 0px;" />
        <b>What are the open questions in the field?</b><br/>
        even the simple question of how many full Latin squares (n × n) are is only answered to the order of n=11.. to this day there is no answer for n>=12.<br/>
        But the question that drove my thesis, and still holds my mind, is this:<br />
        lets define a permutation in PLRs as a swap between rows, columns or symbols. Something like swap row 1 and 2 is a permutation.<br />
        lets say we have a PLR x and a set of permutations {a,b,c} on its rows, columns and symbols accordingly, that is not trivial, and when you apply {a,b,c} on x you get x.<br />
        what special traits (besides being beautiful) do those groups have?<br />
        and how fast can we determine if a PLR belongs in that group?<br />
        those are some of the questions that inspired this website

    </p>
</div>

<div class="row text-div">
    <p>
        <img alt="sudoku" src="https://media2.giphy.com/media/l41Yy6jvn3BXYDRu0/source.gif" class="inline" style="border-radius: 20px; height: 200px; width: auto; float: right; margin: 0px 0px 0px 20px;" />
        <b>So what can this website do for us?</b><br /><br />
        Currently there is no official platform for generating PLRs data for researchers in the field.<br/>
        The website creates PLRs and lets us investigate them to some extent.<br />Here are some of the things you can do here (click on the option you want to try out):<br /><br />
        <a href="/home/empty">
            1.	Create “empty” PLRs:<br />
            we start with an empty rectangle, and recursively fill it with random symbols.<br />
            works up until approximately 70% full PLR.<br />
            Statistically, those have more chance of being non-trivial.<br /><br />
        </a>
        <a href="/home/full">
            2.	Create “full” PLRs:<br />
            we start from a full PLR, and remove entries randomly.<br /><br />
        </a>
        <a href="/home/nontrivial">
            3.	Create non-trivial PLRs:<br />
            we randomly create a PLR and test if it has non-trivial permutations, using brute force.<br /><br />
        </a>
        <a href="/home/investigation">
            4.	Investigate PLRs:<br />
            check our generated PLRs for special qualities on different invariants.<br /><br />
        </a>
        <a href="/home/db">5.	Access a PLR database for quick downloading of data.<br /><br /></a>
        <a href="/home/VisualSimulation">6.	Visually see graphs generated from two lines of a PLR, as described in the paper.<br /><br /></a>
    </p>
</div>